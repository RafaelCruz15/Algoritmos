#Lecture 1 - Introduction to Research

# Librerias a utilizar
import numpy as np
import pandas as pd
importar matplotlib.pyplot como plt	# Graficar

# Muestra 100 puntos con una media de 0 y un estándar de 1. Esta es una distribución normal estándar.
a = np.random.normal (0, 1, 100)
print(a)

plt.plot(X);

X = np.random.normal(0, 1, 100)
X2 = np.random.normal(0, 1, 100)

# Grafica plano cartesiano
plt.plot(X);
plt.plot(X2);
# Los datos que generamos no tienen unidades, pero no olvidar las unidades en general.
plt.xlabel('Time') 
plt.ylabel('Returns')
plt.legend(['X', 'X2']);	

# Media aritmética
np.mean (X)

# Desviación estándar
np.std(X)

# Precios reales
data = get_pricing ('MSFT', start_date = '2012-1-1', end_date = '2015-6-1')

# Grafica plano cartesiano
plt.plot(X.index, X.values)
plt.ylabel('Price')
plt.legend(['MSFT']);

# Devolviendo precios
R = X.pct_change()[1:]

# Histograma
plt.hist(R, bins=20)
plt.xlabel('Return')
plt.ylabel('Frequency')
plt.legend(['MSFT Returns']);

# Grafica distribucion normal
plt.hist(np.random.normal(np.mean(R), np.std(R), 10000), bins=20)
plt.xlabel('Return')
plt.ylabel('Frequency')
plt.legend(['Normally Distributed Returns']);

# Generando una media movil con pandas
# Take the average of the last 60 days at each timepoint.
MAVG = pd.rolling_mean(X, window=60)
plt.plot(X.index, X.values)
plt.plot(MAVG.index, MAVG.values)
plt.ylabel('Price')
plt.legend(['MSFT', '60-day MAVG']);
